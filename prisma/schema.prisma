generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Page {
  id      String   @id @default(cuid())
  created DateTime @default(now())
  updated DateTime @default(now())

  content String @default("")
  name    String
  slug    String @unique

  @@index([slug])
}

model Post {
  id      String   @id @default(cuid())
  created DateTime @default(now())
  updated DateTime @default(now())

  alt       String   @default("")
  caption   String   @default("")
  image_url String
  height    Int      @default(0)
  published Boolean  @default(false)
  shot_on   DateTime @default(now())
  stats     Stat?
  tags      Tag[]
  width     Int      @default(0)

  @@index([shot_on])
  @@index([published, shot_on])
}

model Setting {
  id      String   @id @default(cuid())
  created DateTime @default(now())
  updated DateTime @default(now())

  name  String @unique
  value String @default("")
}

model Stat {
  id      String   @id @default(cuid())
  created DateTime @default(now())
  updated DateTime @default(now())

  likes   Int    @default(0)
  post    Post   @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id String @unique
  views   Int    @default(0)
}

model Tag {
  id      String   @id @default(cuid())
  created DateTime @default(now())
  updated DateTime @default(now())

  name  String @unique
  Posts Post[]
}

model SeedFlag {
  id        Int      @id @default(1)
  createdAt DateTime @default(now())
}

model User {
  id      String   @id
  created DateTime @default(now())
  updated DateTime @default(now())

  password_hash String
  sessions      Session[]
  username      String    @unique
}

model Session {
  id     String @id
  userId String

  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}
