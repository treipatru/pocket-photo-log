---
import Alert from "@/components/ui/alert.astro";

const { pbClient } = Astro.locals;
const method = Astro.request.method;

if (method !== "POST") {
	return;
}

let errorMessage = "";

/**
 * Parse form data
 */
const data = await Astro.request.formData();
const formData = Object.fromEntries(data.entries());

const { tags, tagsnew, published, ...restFields } = formData;

/**
 * Make sure there are no empty strings in tags
 */
const postTags = Array.from(tags.toString().split(",")).filter(
	(tag) => !!tag.length
);

/**
 * Create tags if they don't exist
 */
try {
	const newTagNames = tagsnew.toString().split(",");
	if (!newTagNames.length) {
		return;
	}

	for (const name of newTagNames) {
		const newTag = await pbClient.collection("tags").create({ name });
		postTags.push(newTag.id);
	}
} catch (_) {
	errorMessage = "Failed to create one or more tags.";
}

/**
 * Create post
 */
console.log(postTags);

try {
	await pbClient.collection("posts").create({
		...restFields,
		published: published === "on" ? "true" : "false",
		tags: postTags,
	});

	Astro.response.headers.set("HX-Redirect", "/");
} catch (error) {
	errorMessage = "Failed to create post.";
}
---

{errorMessage && <Alert type="error" content={errorMessage} />}
