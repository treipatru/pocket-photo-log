---
import { AstroSeo } from "@astrolib/seo";
import { type Post } from "@/entities/posts";
import { type Tag } from "@/entities/tags";
import Pagination from "@/components/ui/pagination.astro";
import PostListMasonry from "@/components/posts/post-list-masonry";
import SidebarLayout from "@/layouts/sidebar-layout.astro";
import SidebarTagNav from "@/components/base/sidebar-tag-nav";
import { getTagById } from "@/services/db/requests/tags";
import { getPaginatedPosts } from "@/services/db/requests/posts/get";

/**
 * Get tag and tag name
 */
const tagId = Astro.params.id;
if (!tagId) {
	return Astro.redirect("/404");
}

let tag: Tag | null = null;
let tagName = "";

try {
	tag = await getTagById(tagId);
	if (!tag) {
		return Astro.redirect("/404");
	}

	// Clear any categories from name
	tagName = tag.name.replace(/^[^:]*: /, "");
} catch (_) {
	return Astro.redirect("/404");
}

/**
 * Get posts associated with tag
 */
const page = parseInt(Astro.url.searchParams.get("page") || "1");
const perPage = 70;

let items: Post[] = [];
let pagination: APIPagination | null = null;

try {
	const res = await getPaginatedPosts({
		page,
		perPage,
		tagId,
	});

	items = res.items;
	pagination = res.pagination;
} catch (_) {
	return Astro.redirect("/500");
}
---

<AstroSeo
	title={`#${tagName} page ${pagination.page}| ${Astro.locals.siteSettings.TITLE}`}
	description={Astro.locals.siteSettings.DESCRIPTION}
/>

<SidebarLayout showFooter contentPadding={false}>
	<span slot="collection-title">{`on #${tagName}`}</span>

	<SidebarTagNav
		slot="collection-navigation"
		tagId={tagId}
		totalItems={pagination.totalItems}
	/>

	<PostListMasonry
		client:only="react"
		page={page}
		perPage={perPage}
		posts={items}
		tagId={tag.id}
	/>

	<Pagination {...pagination} url=`/tags/${tagId}` />
</SidebarLayout>
