---
import { AstroSeo } from "@astrolib/seo";
import { format } from "date-fns";
import { getImgUrl } from "@/lib/get-img-url";
import { getPostById } from "@/services/db/requests/posts/get";
import { type Post } from "@/entities/posts";
import type { Stat } from "@prisma/client";
import PostComplete from "@/components/posts/post/post-complete";
import SidebarLayout from "@/layouts/sidebar-layout.astro";
import { getStats } from "@/services/db/requests/stats";

const postId = Astro.params.id;
if (!postId) {
	return Astro.redirect("/404");
}

let post: Post | null = null;
let stat: Stat | null = null;

/**
 * Fetch the post and handle 404.
 */
try {
	// The fetch will throw if the post is not found.
	post = await getPostById(postId);
	stat = await getStats(postId);

	if (!post) {
		throw new Error();
	}
} catch (_) {
	return Astro.redirect("/404");
}

// Content strings
const { siteSettings } = Astro.locals;
const postDate = format(post.shotOn, "PPP");
const pageTitle = `${postDate} | ${siteSettings.TITLE}`;
---

<AstroSeo
	title={pageTitle}
	description={siteSettings.DESCRIPTION}
	openGraph={{
		url: Astro.url.host + Astro.url.pathname,
		title: pageTitle,
		description: siteSettings.DESCRIPTION,
		images: [{ url: getImgUrl(post.imageUrl, "MD") }],
		site_name: siteSettings.TITLE,
	}}
/>

<SidebarLayout contentPadding={false}>
	<span slot="collection-title">{`on ${postDate}`}</span>

	<PostComplete
		client:load
		post={post}
		showAdminMenu={!!Astro.locals.user}
		stats={stat}
	/>
</SidebarLayout>
